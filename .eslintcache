[{"C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\App.js":"1","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\Context\\actions.js":"2","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\Context\\context.js":"3","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\utils\\API.js":"4","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\Context\\reducer.js":"5","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\index.js":"6","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\Context\\index.js":"7","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\pages\\HomePage.js":"8","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\pages\\UserPage.js":"9","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\layouts\\video\\CardVideoLayout.js":"10","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\layouts\\auth\\LoginLayout.js":"11","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\pages\\NotFoundPage.js":"12","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\layouts\\AppBar.js":"13","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\layouts\\video\\CardCommentsLayout.js":"14","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\pages\\ProfilePage.js":"15","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\context\\reducer.js":"16","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\layouts\\home\\HomeVideosLayout.js":"17","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\layouts\\PanelCardsVideosLayout.js":"18","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\layouts\\profile\\TableVideosLayout.js":"19","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\pages\\ResetPasswordPage.js":"20"},{"size":2784,"mtime":1610578711759,"results":"21","hashOfConfig":"22"},{"size":1600,"mtime":1609864146248,"results":"23","hashOfConfig":"22"},{"size":1052,"mtime":1608153453320,"results":"24","hashOfConfig":"22"},{"size":443,"mtime":1609860926614,"results":"25","hashOfConfig":"22"},{"size":1380,"mtime":1609864150591,"results":"26","hashOfConfig":"22"},{"size":284,"mtime":1607211725209,"results":"27","hashOfConfig":"22"},{"size":198,"mtime":1608149292854,"results":"28","hashOfConfig":"22"},{"size":400,"mtime":1610559211520,"results":"29","hashOfConfig":"22"},{"size":5611,"mtime":1610579225288,"results":"30","hashOfConfig":"22"},{"size":8872,"mtime":1610579449757,"results":"31","hashOfConfig":"22"},{"size":7809,"mtime":1610563039388,"results":"32","hashOfConfig":"22"},{"size":1153,"mtime":1610563402725,"results":"33","hashOfConfig":"22"},{"size":7738,"mtime":1610564755975,"results":"34","hashOfConfig":"22"},{"size":8537,"mtime":1610564919520,"results":"35","hashOfConfig":"22"},{"size":1877,"mtime":1610579589388,"results":"36","hashOfConfig":"22"},{"size":1380,"mtime":1609864150591,"results":"37","hashOfConfig":"22"},{"size":1762,"mtime":1610559211559,"results":"38","hashOfConfig":"22"},{"size":1500,"mtime":1610579023304,"results":"39","hashOfConfig":"22"},{"size":13987,"mtime":1610582239128,"results":"40","hashOfConfig":"22"},{"size":3234,"mtime":1610559210923,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"13pol9f",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\App.js",["91"],"C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\Context\\actions.js",[],["92","93"],"C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\Context\\context.js",[],["94","95"],"C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\utils\\API.js",[],"C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\Context\\reducer.js",["96","97","98"],"C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\index.js",[],"C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\Context\\index.js",[],"C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\pages\\HomePage.js",["99"],"import React, {useEffect} from \"react\";\r\nimport {useAuthDispatch} from \"../context\";\r\nimport {checkAuth} from \"../context/actions\";\r\nimport HomeVideosLayout from \"../layouts/home/HomeVideosLayout\";\r\n\r\n\r\n\r\n\r\n\r\nfunction HomePage() {\r\n    const dispatch = useAuthDispatch();\r\n    useEffect(() => checkAuth(dispatch), []);\r\n    return (\r\n        <HomeVideosLayout />\r\n    )\r\n}\r\n\r\nexport default HomePage;",["100","101"],"C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\pages\\UserPage.js",["102","103"],"C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\layouts\\video\\CardVideoLayout.js",["104"],"import CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport {CardContent, IconButton} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport API from \"../../utils/API\";\r\nimport {ThumbDown, ThumbUp} from \"@material-ui/icons\";\r\nimport {useAuthState} from \"../../context\";\r\nimport {useSnackbar} from \"notistack\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {useHistory} from \"react-router\";\r\nimport Loading from \"../../components/Loading\";\r\n\r\nconst useStyles = makeStyles({\r\n    video: {\r\n        width: '100%',\r\n        outline: 'none'\r\n    }\r\n})\r\n\r\nfunction CardVideoLayout(props) {\r\n\r\n    const [videoToken] = useState(props.videoToken);\r\n    const userDetails = useAuthState();\r\n    const auth = userDetails.token !== '';\r\n    const classes = useStyles();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const history = useHistory();\r\n\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [videoData, setVideoData] = useState({\r\n        id: 0,\r\n        video: 'unknow',\r\n        user: {\r\n            id: 0,\r\n            name: 'name',\r\n            img: 'img'\r\n        }\r\n    })\r\n    const [mark, setMark] = useState({\r\n        likes: 0,\r\n        dislikes: 0\r\n    })\r\n    const [like, setLike] = useState(0);\r\n    const [token] = useState(videoToken);\r\n    const [markLoad, setMarkLoad] = useState(false);\r\n\r\n\r\n    function loadMarks() {\r\n        setMarkLoad(true);\r\n        if (auth) {\r\n            API.get(`/marks/${videoToken}/user/${userDetails.user.id}`)\r\n                .then((response) => {\r\n                        const mark = response.data.data;\r\n                        setMarkLoad(false);\r\n                        setMark({\r\n                            likes: mark.likes,\r\n                            dislikes: mark.dislikes\r\n                        });\r\n                        setLike(mark.markOwner);\r\n                    },\r\n                    (error) => {\r\n                        enqueueSnackbar(\"Произошла ошибка при загрузке лайков\", { variant: \"error\"})\r\n                    })\r\n        } else {\r\n            API.get(`/marks/${videoToken}`)\r\n                .then((response) => {\r\n                        const mark = response.data.data;\r\n                        setMarkLoad(false);\r\n                        setMark({\r\n                            likes: mark.likes,\r\n                            dislikes: mark.dislikes\r\n                        });\r\n                        setLike(0);\r\n                    },\r\n                    (error) => {\r\n                        enqueueSnackbar(\"Произошла ошибка при загрузке лайков\", { variant: \"error\"})\r\n                    })\r\n        }\r\n    }\r\n\r\n    function changeMark(mark) {\r\n        setMarkLoad(true);\r\n        const data = {\r\n            videoId: videoToken,\r\n            userId: userDetails.user.id,\r\n            mark: mark\r\n        }\r\n        API.post('/marks/', data)\r\n            .then((response) => {\r\n                    const mark = response.data.data;\r\n                    setMarkLoad(false);\r\n                    setMark({\r\n                        likes: mark.likes,\r\n                        dislikes: mark.dislikes\r\n                    });\r\n                    setLike(mark.markOwner);\r\n            },\r\n                (error) => {\r\n                    enqueueSnackbar(\"Произошла ошибка при установки лайка\", { variant: \"error\"})\r\n                    setMarkLoad(false);\r\n                    setLike(0);\r\n                    setMarkLoad(false);\r\n                });\r\n    }\r\n\r\n    function deleteVideo() {\r\n        API.delete(\"videos/\" + videoToken)\r\n            .then((response) => {\r\n                    enqueueSnackbar(\"Успешное удаление\", {variant: \"success\"});\r\n                    history.push(\"/\");\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                    enqueueSnackbar(\"Произошла ошибка при удалении\", {variant: \"error\"});\r\n                })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        API.get('/videos/' + token)\r\n            .then((res) => {\r\n                console.log(res.data.data);\r\n                setVideoData(res.data.data);\r\n                setIsLoaded(true);\r\n                loadMarks();\r\n            },\r\n                (error) => {\r\n                    enqueueSnackbar(\"Произошла ошибка\", { variant: \"error\"})\r\n                })\r\n            .catch(() => {\r\n            });\r\n    }, []);\r\n\r\n    function handleLike() {\r\n        if (like === 1) {\r\n            changeMark(0);\r\n        }\r\n        else {\r\n            changeMark(1);\r\n        }\r\n    }\r\n\r\n    function handleDislike() {\r\n        if (like === -1) {\r\n            changeMark(0);\r\n        }\r\n        else {\r\n            changeMark(-1);\r\n        }\r\n    }\r\n\r\n    const Video = (\r\n        <Card>\r\n            <CardMedia>\r\n                <video className={classes.video} controls>\r\n                    <source src={\"http://localhost:8080/api/file/videos/\" + videoData.video} type=\"video/mp4\"/>\r\n                </video>\r\n            </CardMedia>\r\n            <CardHeader\r\n                title={videoData.name}\r\n                subheader={\r\n                    <React.Fragment>\r\n                        <Typography\r\n                            gutterBottom\r\n                            variant=\"subtitle1\"\r\n                        >\r\n                            {videoData.views + \" просмотров\"}\r\n                        </Typography>\r\n                        <Typography\r\n                            variant=\"subtitle2\"\r\n                        >\r\n                            {new Date(videoData.createDate).toLocaleDateString()}\r\n                        </Typography>\r\n                        {videoData.isPrivate &&\r\n                        <Typography\r\n                            variant=\"subtitle2\"\r\n                        >\r\n                            {\"Это приватное видео\"}\r\n                        </Typography>\r\n                        }\r\n                    </React.Fragment>\r\n                }\r\n                action={\r\n                    <React.Fragment>\r\n                        <IconButton\r\n                            color={like === 1 ? \"primary\" : \"default\"}\r\n                            disabled={!auth || markLoad}\r\n                            onClick={handleLike}\r\n                        >\r\n                            <ThumbUp />\r\n                        </IconButton>\r\n                        <Typography\r\n                            variant=\"subtitle2\"\r\n                            style={{display: 'inline'}}\r\n                            color=\"textSecondary\"\r\n                        >\r\n                            {mark.likes}\r\n                        </Typography>\r\n                        <IconButton\r\n                            color={like === -1 ? \"primary\" : \"default\"}\r\n                            disabled={!auth || markLoad}\r\n                            onClick={handleDislike}\r\n                        >\r\n                            <ThumbDown />\r\n                        </IconButton>\r\n                        <Typography\r\n                            variant=\"subtitle2\"\r\n                            color=\"textSecondary\"\r\n                            style={{display: 'inline'}}\r\n                        >\r\n                            {mark.dislikes}\r\n                        </Typography>\r\n                    </React.Fragment>\r\n                }\r\n            />\r\n            <Divider variant=\"middle\" />\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar onClick={() => history.push(\"/user/\" + videoData.user.id)} style={{cursor: 'pointer'}}>\r\n                        {videoData.user.name[0].toUpperCase()}\r\n                    </Avatar>\r\n                }\r\n                title={<div onClick={() => history.push(\"/user/\" + videoData.user.id)} style={{cursor: 'pointer'}}>{videoData.user.name}</div>}/>\r\n            <CardContent>\r\n                <Typography>\r\n                    {videoData.about}\r\n                </Typography>\r\n            </CardContent>\r\n            {userDetails.user.isAdmin === true &&\r\n            <CardActions>\r\n                <Button color=\"secondary\" onClick={deleteVideo}>Удалить видео</Button>\r\n            </CardActions>}\r\n        </Card>\r\n    );\r\n\r\n    return !isLoaded ? <Loading /> : Video;\r\n\r\n}\r\n\r\nexport default CardVideoLayout;",["105","106"],"C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\layouts\\auth\\LoginLayout.js",[],"C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\pages\\NotFoundPage.js",["107","108"],"C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\layouts\\AppBar.js",["109"],"C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\layouts\\video\\CardCommentsLayout.js",["110"],"import Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {Delete} from \"@material-ui/icons\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {useSnackbar} from \"notistack\";\r\nimport API from \"../../utils/API\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport {useHistory} from \"react-router\";\r\n\r\n\r\nfunction CardCommentsLayout(props) {\r\n    const userId = props.userId;\r\n    const videoId = props.videoId;\r\n    const isAdmin = props.isAdmin;\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const auth = props.auth;\r\n    const [list, setList] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [text, setText] = useState(\"\");\r\n\r\n    function loadComments() {\r\n        setLoading(false);\r\n\r\n        API.get(\"comments/video/\" + videoId)\r\n            .then((response) => {\r\n                console.log(response.data.data);\r\n                setList(response.data.data);\r\n                setLoading(true);\r\n            }, (error) => {\r\n                console.log(error.data);\r\n                enqueueSnackbar(\"Ошибка при загрузки комментариев\", {variant: \"error\"});\r\n                setLoading(true);\r\n            })\r\n\r\n    }\r\n\r\n    function handleChange(e) {\r\n        setText(e.target.value);\r\n    }\r\n\r\n    function handleCreateComment() {\r\n        const createCommentData = {\r\n            text: text,\r\n            video_id: videoId,\r\n            user_id: userId\r\n        }\r\n\r\n        API.post(\"comments\", createCommentData)\r\n            .then(\r\n                (response) => {\r\n                    console.log(response.data.data)\r\n                    setText(\"\");\r\n                    enqueueSnackbar(\"Комментарий успешно создан\", {variant: \"success\"});\r\n                    loadComments();\r\n                },\r\n                (error) => {\r\n                    console.log(error.data);\r\n                    enqueueSnackbar(\"Ошибка при создании комментария\", {variant: \"error\"});\r\n                });\r\n    }\r\n\r\n    useEffect(loadComments, []);\r\n\r\n    return (\r\n        <Paper>\r\n            <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"stretch\"\r\n                style={{paddingLeft: 15, paddingRight: 15}}\r\n                spacing={3}\r\n            >\r\n                {auth &&\r\n                <Grid item xs >\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth={true}\r\n                        multiline\r\n                        rowsMax={20}\r\n                        rows={4}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Напишите комментарий\"\r\n                        name=\"text\"\r\n                        value={text}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                    <Button\r\n                        color=\"primary\"\r\n                        variant=\"outlined\"\r\n                        onClick={handleCreateComment}\r\n                    >\r\n                        Отправить\r\n                    </Button>\r\n                </Grid>\r\n                }\r\n                <Grid item xs  >\r\n                    { loading ? <ListComments isAdmin={isAdmin} list={list}  /> : <CircularProgress /> }\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n}));\r\n\r\nfunction ListComments(props) {\r\n    const classes = useStyles();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const history = useHistory();\r\n    const [list, setList] = useState(props.list.map((item) => {\r\n        item.createDate = new Date(item.createDate);\r\n        return item;\r\n    }).sort((a, b) => {\r\n        return new Date(b.createDate) - new Date(a.createDate);\r\n    }));\r\n\r\n    function deleteComment(item, index) {\r\n        API.delete(\"/comments/\" + item.id)\r\n            .then((res) => {\r\n                const l = list.slice();\r\n                const removed = l.splice(index, 1);\r\n                setList(l);\r\n                enqueueSnackbar(`Комменатрий ${removed[0].text} удален`, { variant: \"success\" });\r\n            },\r\n                (error) => {\r\n                enqueueSnackbar(\"Комменатрий не может быть удален\", { variant: \"warning\" });\r\n            })\r\n    }\r\n\r\n    return (\r\n        <List className={classes.root} subheader={\r\n            <React.Fragment>\r\n                <ListSubheader>Комментарии</ListSubheader>\r\n                <Divider variant=\"fullWidth\" />\r\n            </React.Fragment>\r\n        }>\r\n            {\r\n                Array.prototype.map.call(list, function (item, index) {\r\n                    return (\r\n                        <React.Fragment key={index}>\r\n                        <ListItem alignItems=\"flex-start\">\r\n                            <ListItemAvatar>\r\n                                <Avatar onClick={() => history.push(\"/user/\" + item.user.id)} style={{cursor: 'pointer'}}>\r\n                                    {item.user.name[0].toUpperCase()}\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={\r\n                                    <React.Fragment>\r\n                                        <div onClick={() => history.push(\"/user/\" + item.user.id)} style={{cursor: 'pointer', display: 'inline'}}>\r\n                                            {item.user.name}\r\n                                        </div>\r\n                                        <Typography\r\n                                            component=\"span\"\r\n                                            variant=\"subtitle2\"\r\n                                            className={classes.inline}\r\n                                            color=\"textSecondary\"\r\n                                            style={{marginLeft:15}}\r\n                                        >\r\n                                            {new Date(item.createDate).toLocaleString()}\r\n                                        </Typography>\r\n                                    </React.Fragment>\r\n                                    }\r\n                                secondary={\r\n                                    <Typography\r\n                                        component=\"span\"\r\n                                        variant=\"body2\"\r\n                                        className={classes.inline}\r\n                                        color=\"textPrimary\"\r\n                                    >\r\n                                        {item.text}\r\n                                    </Typography>\r\n                                }\r\n                            />\r\n                            {props.isAdmin &&\r\n                            <ListItemSecondaryAction>\r\n                                <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => deleteComment(item, index)}>\r\n                                    <Delete />\r\n                                </IconButton>\r\n                            </ListItemSecondaryAction> }\r\n                        </ListItem>\r\n                            {index !== list.length - 1 && <Divider variant=\"fullWidth\" />}\r\n                        </React.Fragment>\r\n                    )\r\n                })\r\n            }\r\n        </List>\r\n    )\r\n}\r\n\r\n\r\nexport default CardCommentsLayout;",["111","112"],"C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\pages\\ProfilePage.js",["113"],"C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\context\\reducer.js",["114","115","116"],"import React, { useState, useReducer } from 'react';\r\n\r\n\r\nconsole.log(localStorage.getItem('currentUser'));\r\n\r\nlet user = localStorage.getItem('currentUser')\r\n    ? JSON.parse(localStorage.getItem('currentUser'))\r\n    : '';\r\nlet token = localStorage.getItem('currentUser')\r\n    ? JSON.parse(localStorage.getItem('currentUser')).token\r\n    : '';\r\n\r\nexport const initialState = {\r\n    user: '' || user,\r\n    token: '' || token,\r\n    loading: false,\r\n    errorMessage: null,\r\n};\r\n\r\nconsole.log(initialState);\r\n\r\nexport const AuthReducer = (initialState, action) => {\r\n    switch (action.type) {\r\n        case 'REQUEST_LOGIN':\r\n            return {\r\n                ...initialState,\r\n                loading: true,\r\n            };\r\n        case 'LOGIN_SUCCESS':\r\n            return {\r\n                ...initialState,\r\n                user: action.payload,\r\n                token: action.payload.token,\r\n                loading: false,\r\n            };\r\n        case 'LOGOUT':\r\n            return {\r\n                ...initialState,\r\n                user: '',\r\n                token: '',\r\n            };\r\n\r\n        case 'LOGIN_ERROR':\r\n            return {\r\n                ...initialState,\r\n                loading: false,\r\n                errorMessage: action.error,\r\n            };\r\n\r\n        default:\r\n            throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n}","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\layouts\\home\\HomeVideosLayout.js",["117"],"C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\layouts\\PanelCardsVideosLayout.js",[],"C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\layouts\\profile\\TableVideosLayout.js",["118","119"],"C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\pages\\ResetPasswordPage.js",[],{"ruleId":null,"fatal":true,"severity":2,"message":"120","line":24,"column":18},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"121","replacedBy":"125"},{"ruleId":"123","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":1,"column":8,"nodeType":"129","messageId":"130","endLine":1,"endColumn":13},{"ruleId":"127","severity":1,"message":"131","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":25},{"ruleId":"127","severity":1,"message":"132","line":1,"column":27,"nodeType":"129","messageId":"130","endLine":1,"endColumn":37},{"ruleId":"133","severity":1,"message":"134","line":12,"column":42,"nodeType":"135","endLine":12,"endColumn":44,"suggestions":"136"},{"ruleId":"121","replacedBy":"137"},{"ruleId":"123","replacedBy":"138"},{"ruleId":"133","severity":1,"message":"134","line":27,"column":42,"nodeType":"135","endLine":27,"endColumn":44,"suggestions":"139"},{"ruleId":"133","severity":1,"message":"140","line":43,"column":8,"nodeType":"135","endLine":43,"endColumn":10,"suggestions":"141"},{"ruleId":"133","severity":1,"message":"142","line":138,"column":8,"nodeType":"135","endLine":138,"endColumn":10,"suggestions":"143"},{"ruleId":"121","replacedBy":"144"},{"ruleId":"123","replacedBy":"145"},{"ruleId":"127","severity":1,"message":"146","line":24,"column":11,"nodeType":"129","messageId":"130","endLine":24,"endColumn":15},{"ruleId":"133","severity":1,"message":"134","line":25,"column":42,"nodeType":"135","endLine":25,"endColumn":44,"suggestions":"147"},{"ruleId":"133","severity":1,"message":"134","line":67,"column":42,"nodeType":"135","endLine":67,"endColumn":44,"suggestions":"148"},{"ruleId":"133","severity":1,"message":"149","line":75,"column":29,"nodeType":"135","endLine":75,"endColumn":31,"suggestions":"150"},{"ruleId":"121","replacedBy":"151"},{"ruleId":"123","replacedBy":"152"},{"ruleId":"133","severity":1,"message":"134","line":29,"column":42,"nodeType":"135","endLine":29,"endColumn":44,"suggestions":"153"},{"ruleId":"127","severity":1,"message":"128","line":1,"column":8,"nodeType":"129","messageId":"130","endLine":1,"endColumn":13},{"ruleId":"127","severity":1,"message":"131","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":25},{"ruleId":"127","severity":1,"message":"132","line":1,"column":27,"nodeType":"129","messageId":"130","endLine":1,"endColumn":37},{"ruleId":"133","severity":1,"message":"154","line":41,"column":8,"nodeType":"135","endLine":41,"endColumn":14,"suggestions":"155"},{"ruleId":"127","severity":1,"message":"156","line":27,"column":9,"nodeType":"129","messageId":"130","endLine":27,"endColumn":17},{"ruleId":"133","severity":1,"message":"157","line":178,"column":7,"nodeType":"135","endLine":178,"endColumn":9,"suggestions":"158"},"Parsing error: Unexpected token\n\n  22 |   palette: {\n  23 |       primary: orange,\n> 24 |       secondary: ,\n     |                  ^\n  25 |       info: grey,\n  26 |       type: 'dark',\n  27 |       text: {","no-native-reassign",["159"],"no-negated-in-lhs",["160"],["159"],["160"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useReducer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["161"],["159"],["160"],["162"],"React Hook useEffect has missing dependencies: 'enqueueSnackbar', 'loadUserData', and 'userId'. Either include them or remove the dependency array.",["163"],"React Hook useEffect has missing dependencies: 'enqueueSnackbar', 'loadMarks', and 'token'. Either include them or remove the dependency array.",["164"],["159"],["160"],"'auth' is assigned a value but never used.",["165"],["166"],"React Hook useEffect has missing dependencies: 'enqueueSnackbar' and 'videoId'. Either include them or remove the dependency array.",["167"],["159"],["160"],["168"],"React Hook useEffect has missing dependencies: 'name', 'sort', and 'videosData'. Either include them or remove the dependency array.",["169"],"'CheckBox' is defined but never used.","React Hook useEffect has a missing dependency: 'loadRows'. Either include it or remove the dependency array.",["170"],"no-global-assign","no-unsafe-negation",{"desc":"171","fix":"172"},{"desc":"171","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"171","fix":"178"},{"desc":"171","fix":"179"},{"desc":"180","fix":"181"},{"desc":"171","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},"Update the dependencies array to be: [dispatch]",{"range":"187","text":"188"},{"range":"189","text":"188"},"Update the dependencies array to be: [enqueueSnackbar, loadUserData, userId]",{"range":"190","text":"191"},"Update the dependencies array to be: [enqueueSnackbar, loadMarks, token]",{"range":"192","text":"193"},{"range":"194","text":"188"},{"range":"195","text":"188"},"Update the dependencies array to be: [enqueueSnackbar, videoId]",{"range":"196","text":"197"},{"range":"198","text":"188"},"Update the dependencies array to be: [name, page, sort, videosData]",{"range":"199","text":"200"},"Update the dependencies array to be: [loadRows]",{"range":"201","text":"202"},[314,316],"[dispatch]",[1081,1083],[1701,1703],"[enqueueSnackbar, loadUserData, userId]",[4769,4771],"[enqueueSnackbar, loadMarks, token]",[777,779],[2107,2109],[2779,2781],"[enqueueSnackbar, videoId]",[933,935],[1498,1504],"[name, page, sort, videosData]",[6376,6378],"[loadRows]"]