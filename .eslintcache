[{"C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\pages\\NewVideoPage.js":"1","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\pages\\HomePage.js":"2","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\layouts\\auth\\RegisterLayout.js":"3","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\context\\reducer.js":"4","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\components\\CustomAvatar.js":"5","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\layouts\\profile\\EditProfileLayout.js":"6","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\pages\\UserPage.js":"7","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\layouts\\AppBar.js":"8","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\layouts\\video\\CardVideoLayout.js":"9","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\layouts\\profile\\TableVideosLayout.js":"10","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\layouts\\home\\HomeVideosLayout.js":"11","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\App.js":"12","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\pages\\NotFoundPage.js":"13","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\index.js":"14","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\context\\index.js":"15","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\pages\\ResetPasswordPage.js":"16","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\layouts\\video\\CardCommentsLayout.js":"17","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\context\\actions.js":"18","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\layouts\\auth\\LoginLayout.js":"19","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\pages\\ProfilePage.js":"20","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\layouts\\PanelCardsVideosLayout.js":"21"},{"size":7038,"mtime":1610897367453,"results":"22","hashOfConfig":"23"},{"size":400,"mtime":1610559211520,"results":"24","hashOfConfig":"23"},{"size":6250,"mtime":1610559211302,"results":"25","hashOfConfig":"23"},{"size":1327,"mtime":1610664744233,"results":"26","hashOfConfig":"23"},{"size":1189,"mtime":1610667879023,"results":"27","hashOfConfig":"23"},{"size":10162,"mtime":1610839863119,"results":"28","hashOfConfig":"23"},{"size":5579,"mtime":1610838615713,"results":"29","hashOfConfig":"23"},{"size":8625,"mtime":1610845135309,"results":"30","hashOfConfig":"23"},{"size":8882,"mtime":1610665254936,"results":"31","hashOfConfig":"23"},{"size":13947,"mtime":1610665413511,"results":"32","hashOfConfig":"23"},{"size":1724,"mtime":1610665805683,"results":"33","hashOfConfig":"23"},{"size":2818,"mtime":1610669776265,"results":"34","hashOfConfig":"23"},{"size":1153,"mtime":1610563402725,"results":"35","hashOfConfig":"23"},{"size":284,"mtime":1607211725209,"results":"36","hashOfConfig":"23"},{"size":198,"mtime":1608149292854,"results":"37","hashOfConfig":"23"},{"size":3190,"mtime":1610665254893,"results":"38","hashOfConfig":"23"},{"size":8639,"mtime":1610665413565,"results":"39","hashOfConfig":"23"},{"size":1600,"mtime":1609864146248,"results":"40","hashOfConfig":"23"},{"size":7809,"mtime":1610563039388,"results":"41","hashOfConfig":"23"},{"size":1877,"mtime":1610579589388,"results":"42","hashOfConfig":"23"},{"size":1496,"mtime":1610838994147,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"13pol9f",{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\pages\\NewVideoPage.js",["92"],"C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\pages\\HomePage.js",["93"],"C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\layouts\\auth\\RegisterLayout.js",[],["94","95"],"C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\context\\reducer.js",["96","97","98"],"import React, { useState, useReducer } from 'react';\r\n\r\n\r\nlet user = localStorage.getItem('currentUser')\r\n    ? JSON.parse(localStorage.getItem('currentUser'))\r\n    : '';\r\nlet token = localStorage.getItem('currentUser')\r\n    ? JSON.parse(localStorage.getItem('currentUser')).token\r\n    : '';\r\n\r\nexport const initialState = {\r\n    user: '' || user,\r\n    token: '' || token,\r\n    loading: false,\r\n    errorMessage: null,\r\n};\r\n\r\nconsole.log(initialState);\r\n\r\nexport const AuthReducer = (initialState, action) => {\r\n    switch (action.type) {\r\n        case 'REQUEST_LOGIN':\r\n            return {\r\n                ...initialState,\r\n                loading: true,\r\n            };\r\n        case 'LOGIN_SUCCESS':\r\n            return {\r\n                ...initialState,\r\n                user: action.payload,\r\n                token: action.payload.token,\r\n                loading: false,\r\n            };\r\n        case 'LOGOUT':\r\n            return {\r\n                ...initialState,\r\n                user: '',\r\n                token: '',\r\n            };\r\n\r\n        case 'LOGIN_ERROR':\r\n            return {\r\n                ...initialState,\r\n                loading: false,\r\n                errorMessage: action.error,\r\n            };\r\n\r\n        default:\r\n            throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n}","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\components\\CustomAvatar.js",[],"C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\layouts\\profile\\EditProfileLayout.js",["99","100"],"C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\pages\\UserPage.js",["101","102"],"C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\layouts\\AppBar.js",["103"],"C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\layouts\\video\\CardVideoLayout.js",["104","105"],"C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\layouts\\profile\\TableVideosLayout.js",["106","107"],"C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\layouts\\home\\HomeVideosLayout.js",["108"],"C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\App.js",[],"C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\pages\\NotFoundPage.js",["109","110"],"C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\index.js",[],["111","112"],"C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\context\\index.js",[],"C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\pages\\ResetPasswordPage.js",[],"C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\layouts\\video\\CardCommentsLayout.js",["113","114"],"import Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {Delete} from \"@material-ui/icons\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {useSnackbar} from \"notistack\";\r\nimport API from \"../../utils/API\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport {useHistory} from \"react-router\";\r\nimport CustomAvatar from \"../../components/CustomAvatar\";\r\n\r\n\r\nfunction CardCommentsLayout(props) {\r\n    const userId = props.userId;\r\n    const videoId = props.videoId;\r\n    const isAdmin = props.isAdmin;\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const auth = props.auth;\r\n    const [list, setList] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [text, setText] = useState(\"\");\r\n\r\n    function loadComments() {\r\n        setLoading(false);\r\n\r\n        API.get(\"comments/video/\" + videoId)\r\n            .then((response) => {\r\n                console.log(response.data.data);\r\n                setList(response.data.data);\r\n                setLoading(true);\r\n            }, (error) => {\r\n                console.log(error.data);\r\n                enqueueSnackbar(error.response.data.error, {variant: \"error\"});\r\n                setLoading(true);\r\n            })\r\n\r\n    }\r\n\r\n    function handleChange(e) {\r\n        setText(e.target.value);\r\n    }\r\n\r\n    function handleCreateComment() {\r\n        const createCommentData = {\r\n            text: text,\r\n            video_id: videoId,\r\n            user_id: userId\r\n        }\r\n\r\n        API.post(\"comments\", createCommentData)\r\n            .then(\r\n                (response) => {\r\n                    console.log(response.data.data)\r\n                    setText(\"\");\r\n                    enqueueSnackbar(\"Комментарий успешно создан\", {variant: \"success\"});\r\n                    loadComments();\r\n                },\r\n                (error) => {\r\n                    console.log(error.data);\r\n                    enqueueSnackbar(error.response.data.error, {variant: \"error\"});\r\n                });\r\n    }\r\n\r\n    useEffect(loadComments, []);\r\n\r\n    return (\r\n        <Paper>\r\n            <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"stretch\"\r\n                style={{paddingLeft: 15, paddingRight: 15}}\r\n                spacing={3}\r\n            >\r\n                {auth &&\r\n                <Grid item xs >\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth={true}\r\n                        multiline\r\n                        rowsMax={20}\r\n                        rows={4}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Напишите комментарий\"\r\n                        name=\"text\"\r\n                        value={text}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                    <Button\r\n                        color=\"primary\"\r\n                        variant=\"outlined\"\r\n                        onClick={handleCreateComment}\r\n                    >\r\n                        Отправить\r\n                    </Button>\r\n                </Grid>\r\n                }\r\n                <Grid item xs  >\r\n                    { loading ? <ListComments isAdmin={isAdmin} list={list}  /> : <CircularProgress /> }\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n}));\r\n\r\nfunction ListComments(props) {\r\n    const classes = useStyles();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const history = useHistory();\r\n    const [list, setList] = useState(props.list.map((item) => {\r\n        item.createDate = new Date(item.createDate);\r\n        return item;\r\n    }).sort((a, b) => {\r\n        return new Date(b.createDate) - new Date(a.createDate);\r\n    }));\r\n\r\n    function deleteComment(item, index) {\r\n        API.delete(\"/comments/\" + item.id)\r\n            .then((res) => {\r\n                const l = list.slice();\r\n                const removed = l.splice(index, 1);\r\n                setList(l);\r\n                enqueueSnackbar(`Комменатрий ${removed[0].text} удален`, { variant: \"success\" });\r\n            },\r\n                (error) => {\r\n                enqueueSnackbar(\"Комменатрий не может быть удален\", { variant: \"warning\" });\r\n            })\r\n    }\r\n\r\n    return (\r\n        <List className={classes.root} subheader={\r\n            <React.Fragment>\r\n                <ListSubheader>Комментарии</ListSubheader>\r\n                <Divider variant=\"fullWidth\" />\r\n            </React.Fragment>\r\n        }>\r\n            {\r\n                Array.prototype.map.call(list, function (item, index) {\r\n                    return (\r\n                        <React.Fragment key={index}>\r\n                        <ListItem alignItems=\"flex-start\">\r\n                            <ListItemAvatar>\r\n                                <CustomAvatar\r\n                                    src={item.user.img}\r\n                                    name={item.user.name}\r\n                                    onClick={() => history.push(\"/user/\" + item.user.id)}\r\n                                    style={{cursor: 'pointer'}}\r\n                                />\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={\r\n                                    <React.Fragment>\r\n                                        <div onClick={() => history.push(\"/user/\" + item.user.id)} style={{cursor: 'pointer', display: 'inline'}}>\r\n                                            {item.user.name}\r\n                                        </div>\r\n                                        <Typography\r\n                                            component=\"span\"\r\n                                            variant=\"subtitle2\"\r\n                                            className={classes.inline}\r\n                                            color=\"textSecondary\"\r\n                                            style={{marginLeft:15}}\r\n                                        >\r\n                                            {new Date(item.createDate).toLocaleString()}\r\n                                        </Typography>\r\n                                    </React.Fragment>\r\n                                    }\r\n                                secondary={\r\n                                    <Typography\r\n                                        component=\"span\"\r\n                                        variant=\"body2\"\r\n                                        className={classes.inline}\r\n                                        color=\"textPrimary\"\r\n                                    >\r\n                                        {item.text}\r\n                                    </Typography>\r\n                                }\r\n                            />\r\n                            {props.isAdmin &&\r\n                            <ListItemSecondaryAction>\r\n                                <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => deleteComment(item, index)}>\r\n                                    <Delete />\r\n                                </IconButton>\r\n                            </ListItemSecondaryAction> }\r\n                        </ListItem>\r\n                            {index !== list.length - 1 && <Divider variant=\"fullWidth\" />}\r\n                        </React.Fragment>\r\n                    )\r\n                })\r\n            }\r\n        </List>\r\n    )\r\n}\r\n\r\n\r\nexport default CardCommentsLayout;","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\context\\actions.js",[],"C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\layouts\\auth\\LoginLayout.js",[],["115","116"],"C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\pages\\ProfilePage.js",["117"],"import React, {useEffect} from \"react\";\r\nimport {Button, Container, Grid, makeStyles, Typography} from \"@material-ui/core\";\r\nimport {useHistory} from \"react-router\";\r\nimport TableVideosLayout from \"../layouts/profile/TableVideosLayout\";\r\nimport EditProfileLayout from \"../layouts/profile/EditProfileLayout\";\r\nimport {useAuthDispatch} from \"../context\";\r\nimport {checkAuth} from \"../context/actions\";\r\n\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    headers: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    addVideo: {\r\n        marginBottom: theme.spacing(2),\r\n        display: 'flex',\r\n        alignItems: \"center\",\r\n        justifyContent: 'space-between'\r\n    }\r\n}));\r\n\r\nexport default function ProfilePage() {\r\n    const classes = useStyle();\r\n    const dispatch = useAuthDispatch();\r\n    const history = useHistory();\r\n    useEffect(() => checkAuth(dispatch), []);\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\">\r\n            <Grid container className={classes.paper} spacing={4}>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h4\" className={classes.headers} color=\"textPrimary\">\r\n                        Ваш профиль\r\n                    </Typography>\r\n                    <EditProfileLayout />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <div className={classes.addVideo}>\r\n                        <Typography variant=\"h4\" color=\"textPrimary\">\r\n                            Ваши видео\r\n                        </Typography>\r\n                        <Button color=\"primary\" variant=\"text\" onClick={() => history.push(\"/new\")}>Добавить видео</Button>\r\n                    </div>\r\n                    <TableVideosLayout />\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}","C:\\Users\\pshbl\\WebstormProjects\\video-hosting-front\\src\\layouts\\PanelCardsVideosLayout.js",[],{"ruleId":"118","severity":1,"message":"119","line":17,"column":8,"nodeType":"120","messageId":"121","endLine":17,"endColumn":21},{"ruleId":"122","severity":1,"message":"123","line":12,"column":42,"nodeType":"124","endLine":12,"endColumn":44,"suggestions":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"118","severity":1,"message":"130","line":1,"column":8,"nodeType":"120","messageId":"121","endLine":1,"endColumn":13},{"ruleId":"118","severity":1,"message":"131","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":25},{"ruleId":"118","severity":1,"message":"132","line":1,"column":27,"nodeType":"120","messageId":"121","endLine":1,"endColumn":37},{"ruleId":"118","severity":1,"message":"133","line":1,"column":9,"nodeType":"120","messageId":"121","endLine":1,"endColumn":15},{"ruleId":"122","severity":1,"message":"134","line":193,"column":8,"nodeType":"124","endLine":193,"endColumn":20,"suggestions":"135"},{"ruleId":"122","severity":1,"message":"123","line":28,"column":42,"nodeType":"124","endLine":28,"endColumn":44,"suggestions":"136"},{"ruleId":"122","severity":1,"message":"137","line":43,"column":8,"nodeType":"124","endLine":43,"endColumn":10,"suggestions":"138"},{"ruleId":"122","severity":1,"message":"123","line":70,"column":42,"nodeType":"124","endLine":70,"endColumn":44,"suggestions":"139"},{"ruleId":"118","severity":1,"message":"133","line":3,"column":8,"nodeType":"120","messageId":"121","endLine":3,"endColumn":14},{"ruleId":"122","severity":1,"message":"140","line":139,"column":8,"nodeType":"124","endLine":139,"endColumn":10,"suggestions":"141"},{"ruleId":"118","severity":1,"message":"142","line":27,"column":9,"nodeType":"120","messageId":"121","endLine":27,"endColumn":17},{"ruleId":"122","severity":1,"message":"143","line":178,"column":7,"nodeType":"124","endLine":178,"endColumn":9,"suggestions":"144"},{"ruleId":"122","severity":1,"message":"145","line":41,"column":8,"nodeType":"124","endLine":41,"endColumn":14,"suggestions":"146"},{"ruleId":"118","severity":1,"message":"147","line":24,"column":11,"nodeType":"120","messageId":"121","endLine":24,"endColumn":15},{"ruleId":"122","severity":1,"message":"123","line":25,"column":42,"nodeType":"124","endLine":25,"endColumn":44,"suggestions":"148"},{"ruleId":"126","replacedBy":"149"},{"ruleId":"128","replacedBy":"150"},{"ruleId":"118","severity":1,"message":"133","line":5,"column":8,"nodeType":"120","messageId":"121","endLine":5,"endColumn":14},{"ruleId":"122","severity":1,"message":"151","line":76,"column":29,"nodeType":"124","endLine":76,"endColumn":31,"suggestions":"152"},{"ruleId":"126","replacedBy":"153"},{"ruleId":"128","replacedBy":"154"},{"ruleId":"122","severity":1,"message":"123","line":29,"column":42,"nodeType":"124","endLine":29,"endColumn":44,"suggestions":"155"},"no-unused-vars","'DialogContent' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["156"],"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"'React' is defined but never used.","'useState' is defined but never used.","'useReducer' is defined but never used.","'Avatar' is defined but never used.","React Hook useEffect has a missing dependency: 'passwordData'. Either include it or remove the dependency array. You can also do a functional update 'setPasswordData(p => ...)' if you only need 'passwordData' in the 'setPasswordData' call.",["159"],["160"],"React Hook useEffect has missing dependencies: 'enqueueSnackbar', 'loadUserData', and 'userId'. Either include them or remove the dependency array.",["161"],["162"],"React Hook useEffect has missing dependencies: 'enqueueSnackbar', 'loadMarks', and 'token'. Either include them or remove the dependency array.",["163"],"'CheckBox' is defined but never used.","React Hook useEffect has a missing dependency: 'loadRows'. Either include it or remove the dependency array.",["164"],"React Hook useEffect has missing dependencies: 'name', 'sort', and 'videosData'. Either include them or remove the dependency array.",["165"],"'auth' is assigned a value but never used.",["166"],["157"],["158"],"React Hook useEffect has missing dependencies: 'enqueueSnackbar' and 'videoId'. Either include them or remove the dependency array.",["167"],["157"],["158"],["168"],{"desc":"169","fix":"170"},"no-global-assign","no-unsafe-negation",{"desc":"171","fix":"172"},{"desc":"169","fix":"173"},{"desc":"174","fix":"175"},{"desc":"169","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"169","fix":"183"},{"desc":"184","fix":"185"},{"desc":"169","fix":"186"},"Update the dependencies array to be: [dispatch]",{"range":"187","text":"188"},"Update the dependencies array to be: [passwordData, props.open]",{"range":"189","text":"190"},{"range":"191","text":"188"},"Update the dependencies array to be: [enqueueSnackbar, loadUserData, userId]",{"range":"192","text":"193"},{"range":"194","text":"188"},"Update the dependencies array to be: [enqueueSnackbar, loadMarks, token]",{"range":"195","text":"196"},"Update the dependencies array to be: [loadRows]",{"range":"197","text":"198"},"Update the dependencies array to be: [name, page, sort, videosData]",{"range":"199","text":"200"},{"range":"201","text":"188"},"Update the dependencies array to be: [enqueueSnackbar, videoId]",{"range":"202","text":"203"},{"range":"204","text":"188"},[314,316],"[dispatch]",[7458,7470],"[passwordData, props.open]",[1129,1131],[1715,1717],"[enqueueSnackbar, loadUserData, userId]",[2236,2238],[4789,4791],"[enqueueSnackbar, loadMarks, token]",[6383,6385],"[loadRows]",[1460,1466],"[name, page, sort, videosData]",[777,779],[2821,2823],"[enqueueSnackbar, videoId]",[933,935]]